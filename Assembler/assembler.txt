TASK 1:

Multiply numbers 12h and 0Fh using registers a and b.
Subtract 02h from the result.

ORG 0000
CLR a
MOV a, #12h
MOV B, #0Fh
MUL ab
SUBB a, #02h
END

-------------------------------------------------------
TASK 2:

Transfer the data 51h into indirectly addressed memory 
location 2Ah using R0 registry. Afterwards, transfer 
the data into accumulator and increase it by 1 and 
store the data into the location 2Bh.

ORG 00h
CLR a
MOV R0, #2Ah
MOV @R0, #51h
MOV a, @R0
INC a
MOV 2Bh, a
END

-------------------------------------------------------
TASK 3:

Define a variable called CLUE and give it a value of
35h. Move the value 1Fh in the accumulator and perform
operation OR over the accumulator and variable CLUE.
Store the result in the address 2Ch.

ORG 00h
CLR a
CLUE EQU 35h
MOV a, #1Fh
ORL a,#CLUE
MOV 2Ch, a
END

-------------------------------------------------------
TASK 4:

Using the accumulator, location 1Fh and 20h, add the
numbers from 01h to 0Fh. Store the sum on the location
21h.

ORG 00h
CLR a
MOV 1Fh, #01h
MOV 20h, #0Fh
LOOP:
	ADD a, 1Fh
	INC 1Fh
	DJNZ 20h, LOOP
MOV 21h, a
END

-------------------------------------------------------
TASK 5:

Input the value 75h in register R6. Decrease that value
by 1. Transfer the new value in location 29h. Increase
it by 1 and push it to stack.

ORG 00h
CLR a
MOV R6, #75h
DEC R6
MOV 29h, R6
INC 29h
PUSH 29h
END

-------------------------------------------------------
TASK 6:

Store the value 20h in the accumulator, and in the 
memory location 40h store the constant 2. Divide these
values and store the result in register R3.

ORG 00h
CLR a
MOV a, #20h
MOV 40h, #02h
MOV b, 40h
DIV ab
MOV R3, a
END

-------------------------------------------------------