TASK 1:

Set the lowest bit in the registry R0 to 1.
(R0 contains any testing value)

ORG 00h
CLR a
MOV R0, #08h
MOV a, R0
ORL a, #01b
MOV R0, a
END

----------------------------------------------
TASK 2:

Set the lowest and highest bit in the registry
R0 to 1. (R0 contains any testing value)

ORG 00h
CLR a
MOV R0, #08h
MOV a, R0
ORL a, #10000001b
MOV R0, a
END

----------------------------------------------
TASK 3:

Write a program which adds two numbers in
memory locations next to each other and then
adds that sum to the total sum. Use indirect
addressing when reading the data. The data is
stored in locations 20h to 25h (3 sets).

ORG 00h
CLR a
MOV R0, #20h
MOV R1, #21h
MOV R3, #00h
LOOP:
	CLR a
	ADD a, @R0
	ADD a, @R1
	ADD a, R3
	MOV R3, a
	INC R0
	INC R0
	INC R1
	INC R1
	CJNE R1, #26h, LOOP
END

----------------------------------------------
TASK 4:

Input values from 01h to 05h into memory loca-
tions 20h to 24h. After that, multiply their
values with 09h and replace the old value with
the new one. Use indirect addressing.

ORG 00h
CLR a
MOV R0, #20h
MOV a, #01h
WRITE:
	MOV @R0, a
	INC R0
	INC a
	CJNE a, #06h, WRITE
CLR a
MOV b, #09h
MOV R0, #20H
MULTIPLY:
	MOV a, @R0
	MUL ab
	MOV @R0, a
	MOV b, #09h
	INC R0
	CJNE R0, #25h, MULTIPLY
END

----------------------------------------------